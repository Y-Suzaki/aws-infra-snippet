AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Serverless application.

Parameters:
  DeployEnv:
    Type: String
    Default: dev
  AppVersion:
    Type: String
    Default: 0-1-0

Resources:
  SqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      MessageRetentionPeriod: 120
      QueueName: !Sub lambda-event-output-${DeployEnv}.fifo
      VisibilityTimeout: 30
  
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: lambda_logs_policy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: logs:CreateLogGroup
              Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*
            - Effect: Allow
              Action:
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
                - sqs:ReceiveMessage
              Resource: !GetAtt SqsQueue.Arn

  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda.zip
      FunctionName: !Sub sqs-event-output-${DeployEnv}
      Handler: lambda_handler.handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8
      Timeout: 5
      Environment:
        Variables:
          RETRY_LIMIT: 3
#      Events:
#        SQSEvent:
#          Type: SQS
#          Properties:
#            Queue: !GetAtt SqsQueue.Arn
#            BatchSize: 1

  EventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      Enabled: true
      EventSourceArn: !GetAtt SqsQueue.Arn
      FunctionName: !Ref LambdaFunction

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${LambdaFunction}
      RetentionInDays: 7

  SqsQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues: [!Ref SqsQueue]
      PolicyDocument:
        Version: 2008-10-17
        Id: LambdaEventPolicy
        Statement:
          - Sid: LambdaSendMessage
            Effect: Allow
            Principal: "*"
            Action: sqs:*
            Resource: "*"
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref LambdaFunction
