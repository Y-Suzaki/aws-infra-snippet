AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Serverless application.
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: lambda_logs_policy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: logs:CreateLogGroup
            Resource:
              Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*
          - Effect: Allow
            Action:
            - s3:PutLifecycleConfiguration
            Resource: '*'
          - Effect: Allow
            Action:
            - cloudformation:*
            Resource:
            - Fn::Sub: arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/data-lake-s3-*/*
            - Fn::Sub: arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/data-lake-kinesis-*/*
            - Fn::Sub: arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/data-lake-kinesis-trigger-*/*
  DeleteStackLambda:
    Type: AWS::Serverless::Function
    Properties:
      AutoPublishAlias: latest
      CodeUri: s3://ys-dev-web-codepipeline-artifacts/serverless-function/5c33995d734ece2584ff2128c7b734b1
      FunctionName: dala-lake-control-delete-stack
      Handler: deploy-stack.handler
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Runtime: python3.7
      Timeout: 600
  DeleteStackLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${DeleteStackLambda}
      RetentionInDays: 7
  DeleteS3ObjectsLambda:
    Type: AWS::Serverless::Function
    Properties:
      AutoPublishAlias: latest
      CodeUri: s3://ys-dev-web-codepipeline-artifacts/serverless-function/5c33995d734ece2584ff2128c7b734b1
      FunctionName: dala-lake-control-delete-s3-objects
      Handler: delete-all-objects.handler
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Runtime: python3.7
      Timeout: 600
  DeleteS3ObjectsLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${DeleteS3ObjectsLambda}
      RetentionInDays: 7
  StepFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - Fn::Sub: states.${AWS::Region}.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: StatesExecutionPolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - lambda:InvokeFunction
            Resource:
            - Fn::GetAtt:
              - DeleteStackLambda
              - Arn
            - Fn::GetAtt:
              - DeleteS3ObjectsLambda
              - Arn
  StepFunction:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString:
        Fn::Sub:
        - "{\n  \"StartAt\": \"GetLatestVersionState\",\n  \"States\": {\n    \"GetLatestVersionState\"\
          : {\n      \"Type\": \"Task\",\n      \"Resource\": \"${GetLatestVersionLambdaArn}\"\
          ,\n      \"InputPath\": \"$\",\n      \"OutputPath\": \"$\",\n      \"Next\"\
          : \"DeleteStackKinesisTriggerState\",\n      \"Catch\": [\n        {\n \
          \         \"ErrorEquals\": [\"States.ALL\"],\n          \"Next\": \"DeleteErrorState\"\
          \n        }\n      ]\n    },\n    \"DeleteStackKinesisTriggerState\": {\n\
          \      \"Type\": \"Task\",\n      \"Resource\": \"${DeleteStackLambdaArn}\"\
          ,\n      \"InputPath\": \"$\",\n      \"Parameters\": {\n        \"uri.$\"\
          : \"$.uri\",\n        \"stack_name\": \"kinesis-trigger-stack\",\n     \
          \   \"template_name\": \"kinesis-trigger-template.yml\"\n      },\n    \
          \  \"OutputPath\": \"$\",\n      \"Next\": \"DeleteStackKinesisState\",\n\
          \      \"Catch\": [\n        {\n          \"ErrorEquals\": [\"States.ALL\"\
          ],\n          \"Next\": \"DeleteErrorState\"\n        }\n      ]\n    },\n\
          \    \"DeleteStackKinesisState\": {\n      \"Type\": \"Task\",\n      \"\
          Resource\": \"${DeleteStackLambdaArn}\",\n      \"InputPath\": \"$\",\n\
          \      \"Parameters\": {\n        \"uri.$\": \"$.uri\",\n        \"stack_name\"\
          : \"kinesis-stack\",\n        \"template_name\": \"kinesis-template.yml\"\
          \n      },\n      \"OutputPath\": \"$\",\n      \"Next\": \"DeleteS3ObjectsState\"\
          ,\n      \"Catch\": [\n        {\n          \"ErrorEquals\": [\"States.ALL\"\
          ],\n          \"Next\": \"DeleteErrorState\"\n        }\n      ]\n    },\n\
          \    \"DeleteS3ObjectsState\": {\n      \"Type\": \"Task\",\n      \"Resource\"\
          : \"${DeleteS3ObjectsLambdaArn}\",\n      \"InputPath\": \"$\",\n      \"\
          Parameters\": {\n        \"uri.$\": \"$.uri\",\n        \"life_cycle_days\"\
          : 1\n      },\n      \"OutputPath\": \"$\",\n      \"Next\": \"WaitForS3Empty\"\
          ,\n      \"Catch\": [\n        {\n          \"ErrorEquals\": [\"States.ALL\"\
          ],\n          \"Next\": \"DeleteErrorState\"\n        }\n      ]\n    },\n\
          \    \"WaitForS3Empty\": {\n      \"Type\": \"Wait\",\n      \"Seconds\"\
          : 10,\n      \"Next\": \"DeleteStackS3State\"\n    },\n    \"DeleteStackS3State\"\
          : {\n      \"Type\": \"Task\",\n      \"Resource\": \"${DeleteStackLambdaArn}\"\
          ,\n      \"InputPath\": \"$\",\n      \"Parameters\": {\n        \"uri.$\"\
          : \"$.uri\",\n        \"stack_name\": \"s3-stack\",\n        \"template_name\"\
          : \"s3-template.yml\"\n      },\n      \"OutputPath\": \"$\",\n      \"\
          Catch\": [\n        {\n          \"ErrorEquals\": [\"States.ALL\"],\n  \
          \        \"Next\": \"DeleteErrorState\"\n        }\n      ],\n      \"End\"\
          : true\n    },\n    \"DeleteErrorState\": {\n      \"Type\": \"Fail\"\n\
          \    }\n  }\n}"
        - DeleteStackLambdaArn:
            Fn::GetAtt:
            - DeleteStackLambda
            - Arn
          DeleteS3ObjectsLambdaArn:
            Fn::GetAtt:
            - DeleteS3ObjectsLambda
            - Arn
          GetLatestVersionLambdaArn:
            Fn::ImportValue: data-lake-control-lambda-arn-get-latest-version
      RoleArn:
        Fn::GetAtt:
        - StepFunctionRole
        - Arn
      StateMachineName: data-lake-control-delete-log-type
Outputs:
  StepFunction:
    Description: StepFunction
    Value:
      Ref: StepFunction
